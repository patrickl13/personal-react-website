{"classes":[{
        "id": 1,
        "classname": "Object Oriented Programming I",
        "description": "Introduction to programming. Basic data types, variables, expressions, assignments, control flow. Classes, objects, methods. Information hiding, public vs. private visibility, data abstraction and encapsulation. References. Arrays.",
        "status": "true"
    },
    {
        "id": 2,
        "classname": "Object Oriented Programming II",
        "description": "Design of classes. Inheritance. Polymorphism. Static and dynamic binding. Abstract classes. Exception handling. File I/O. Recursion. Interfaces and inner classes. Graphical user interfaces. Generics. Collections and iterators.",
        "status": "true"
    },
    {
        "id": 3,
        "classname": "System Hardware",
        "description": "Levels of system abstraction and von Neumann model. Basics of digital logic design. Data representation and manipulation. Instruction set architecture. Processor internals. Assembly language programming. Memory subsystem and cache management. I/O subsystem. Introduction to network organization and architecture.",
        "status": "true"
    },
    {
        "id": 4,
        "classname": "Probability and Statistics",
        "description": "Combinatorics. Axioms of probability. Conditional probability. Discrete and continuous probability distributions. Expectation and moments. Hypothesis testing. Parameter estimation. Correlation and linear regression. Applications to computer science.",
        "status": "true"
    },
    {
        "id": 5,
        "classname": "Discrete Mathematics",
        "description": "Sets. Propositional logic and predicate calculus. Functions and relations. Elements of number theory. Mathematical reasoning. Proof techniques: direct proof, indirect proof, proof by contradiction, proof by induction.",
        "status": "true"
    },
    {
        "id": 6,
        "classname": "Data Structures and Algorithms",
        "description": "Abstract data types: stacks and queues, trees, priority queues, dictionaries. Data structures: arrays, linked lists, heaps, hash tables, search trees. Design and analysis of algorithms: asymptotic notation, recursive algorithms, searching and sorting, tree traversal, graph algorithms.",
        "status": "true"
    },
    {
        "id": 7,
        "classname": "Web Programming",
        "description": "Internet architecture and protocols. Web applications through clients and servers. Markup languages. Client‑side programming using scripting languages. Static website contents and dynamic page generation through server‑side programming. Preserving state (client‑side) in web applications.",
        "status": "true"
    },
    {
        "id": 8,
        "classname": "Theoretical Computer Science",
        "description": "Finite state automata and regular languages. Push‑down automata and context‑free languages. Pumping lemmas. Applications to parsing. Turing machines. Unde­cidability and decidability.",
        "status": "true"
    },
    {
        "id": 9,
        "classname": "Linear Algebra and it's Applications I",
        "description": "System of linear equations, matrix operations, echelon forms and LU-factorization; R^n: subspaces, linear dependence, basis, dimension, matrix transformations; eigenvalues and eigenvectors in R^n and applications (e.g. Markov chains, dynamical systems). A symbolic computation system, e.g. MAPLE, is extensively used.",
        "status": "true"
    },
    {
        "id": 10,
        "classname": "Operating Systems",
        "description": "Fundamentals of operating system functionalities, design and implementation. Multiprogramming: processes and threads, context switching, queuing models and scheduling. Interprocess communication and synchronization. Principles of concurrency. Synchronization primitives. Deadlock detection and recovery, prevention and avoidance schemes. Memory management. Device management. File systems. Protection models and schemes.",
        "status": "true"
    },
    {
        "id": 11,
        "classname": "Principles of Programming Languages",
        "description": "Survey of programming paradigms: Imperative, functional, and logic programming. Issues in the design and implementation of programming languages. Declaration models: binding, visibility, and scope. Type systems, including static and dynamic typing. Parameter passing mechanisms. Hybrid language design.",
        "status": "true"
    },
    {
        "id": 12,
        "classname": "Databases",
        "description": "Introduction to database management systems. Conceptual database design: the entity‑relationship model. The relational data model and relational algebra: functional dependencies and normalization. The SQL language and its application in defining, querying, and updating databases; integrity constraints; triggers. Developing database applications. Other data models: Datalog. Object‑oriented data model and ODL. Semi‑structured data.",
        "status": "false"
    },
    {
        "id": 13,
        "classname": "Advanced Program Design in C++",
        "description": "Introduction to C++. I/O with stream classes. Pointers and their uses. The Standard Template Library (STL): containers, algorithms, iterators, adaptors, function objects. Class design: constructors, destructors, operator overloading, inheritance, virtual functions, exception handling, memory management. Advanced topics: libraries, locales, STL conventions, concurrency, template metaprogramming. Applications of C++: systems, engineering, games programming.",
        "status": "false"
    },
    {
        "id": 14,
        "classname": "Data Communications and Networks",
        "description": "Network architectures: OSI and Internet models. Link layer: error detection, multiple access protocols, addressing. Local area networks: Ethernet, ATM, switches and hubs. Network layer: forwarding and routing, IP, routing algorithms, multicast. Transport layer: connectionless and connection‑oriented transport, reliable data transport, congestion control, QoS, UDP and TCP. Application layer: DNS, the web and http, file transfer, and email. Introduction to network security, multimedia protocols and wireless networking.",
        "status": "false"
    }

]}