{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\patri\\\\Documents\\\\personal-react-website\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\patri\\\\Documents\\\\personal-react-website\\\\src\\\\components\\\\contact\\\\contact.component.jsx\";\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport \"./contact.css\";\n\nvar ReactDOM = require('react-dom');\n\nvar FormControl = require('react-bootstrap').FormControl;\n\nfunction sendEmail(email, message_user) {\n  const nodemailer = require('nodemailer');\n\n  let transport = nodemailer.createTransport({\n    host: 'smtp.gmail.com',\n    port: 465,\n    secure: true,\n    auth: {\n      user: 'laterrace3515@gmail.com',\n      pass: 'Cat-47651995'\n    }\n  });\n  const message = {\n    from: 'www.patrickleduc.ca',\n    // Sender address\n    to: 'patrick.leduc13@gmail.com',\n    // List of recipients\n    subject: 'Message from someone at personal website!',\n    // Subject line\n    text: {\n      email,\n      message_user // Plain text body\n\n    }\n  };\n  transport.sendMail(message, function (err, info) {\n    if (err) {\n      console.log(err);\n    } else {\n      console.log(info);\n    }\n  });\n}\n\nfunction Contact() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        validated = _useState2[0],\n        setValidated = _useState2[1];\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n  };\n\n  return React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"First name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"First name\",\n    defaultValue: \"Mark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Looks good!\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Last name\"), React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Last name\",\n    defaultValue: \"Otto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Looks good!\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"4\",\n    controlId: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Username\"), React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    id: \"inputGroupPrepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"@\")), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Please choose a username.\")))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"City\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Please provide a valid city.\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"3\",\n    controlId: \"validationCustom04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"State\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"State\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), React.createElement(Form.Group, {\n    as: Col,\n    md: \"3\",\n    controlId: \"validationCustom05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Zip\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Zip\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Please provide a valid zip.\"))), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Check, {\n    required: true,\n    label: \"Agree to terms and conditions\",\n    feedback: \"You must agree before submitting.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Submit form\"));\n}\n\nrender(React.createElement(Contact, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}));","map":{"version":3,"sources":["C:\\Users\\patri\\Documents\\personal-react-website\\src\\components\\contact\\contact.component.jsx"],"names":["React","Form","Button","ReactDOM","require","FormControl","sendEmail","email","message_user","nodemailer","transport","createTransport","host","port","secure","auth","user","pass","message","from","to","subject","text","sendMail","err","info","console","log","Contact","useState","validated","setValidated","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","Col","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport \"./contact.css\";\r\nvar ReactDOM = require('react-dom');\r\nvar FormControl = require('react-bootstrap').FormControl;\r\n\r\nfunction sendEmail(email, message_user) {\r\n    const nodemailer = require('nodemailer');\r\n  \r\n    let transport = nodemailer.createTransport({\r\n      host: 'smtp.gmail.com',\r\n      port: 465,\r\n      secure: true,\r\n      auth: {\r\n        user: 'laterrace3515@gmail.com',\r\n        pass: 'Cat-47651995'\r\n      }\r\n    });\r\n  \r\n    const message = {\r\n      from: 'www.patrickleduc.ca', // Sender address\r\n      to: 'patrick.leduc13@gmail.com',         // List of recipients\r\n      subject: 'Message from someone at personal website!', // Subject line\r\n      text: {email, message_user} // Plain text body\r\n    };\r\n    transport.sendMail(message, function (err, info) {\r\n      if (err) {\r\n        console.log(err)\r\n      } else {\r\n        console.log(info);\r\n      }\r\n    });\r\n  }\r\n\r\n  function Contact() {\r\n    const [validated, setValidated] = useState(false);\r\n  \r\n    const handleSubmit = event => {\r\n      const form = event.currentTarget;\r\n      if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n  \r\n      setValidated(true);\r\n    };\r\n  \r\n    return (\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom01\">\r\n            <Form.Label>First name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"First name\"\r\n              defaultValue=\"Mark\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n            <Form.Label>Last name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Last name\"\r\n              defaultValue=\"Otto\"\r\n            />\r\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"4\" controlId=\"validationCustomUsername\">\r\n            <Form.Label>Username</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please choose a username.\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Form.Group as={Col} md=\"6\" controlId=\"validationCustom03\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"City\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid city.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom04\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"State\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid state.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"3\" controlId=\"validationCustom05\">\r\n            <Form.Label>Zip</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Zip\" required />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please provide a valid zip.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Submit form</Button>\r\n      </Form>\r\n    );\r\n  }\r\n  \r\nrender(<Contact />);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}